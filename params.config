params {

    // input files
    work_dir = "${System.env.work_dir}/"
    files_dir = "data/nn_input/SNVs__kucab_zou_petljak_hwang/k-"
    training_set = "SNVs__kucab_zou_petljak_hwang_train"
    validation_set = "SNVs__kucab_zou_petljak_hwang_validate"
    testing_set = "SNVs__kucab_zou_petljak_hwang_test"
    all_sets = "SNVs__kucab_zou_petljak_hwang_all"

    // parameter values
    batch_size = 512
    learning_rate = [0.0004,0.0008]
    patience = 20
    kernel_size_conv1 = [2,3]
    out_channels_conv1 = [16,32]
    kernel_size_maxpool1 = [2,3]
    kernel_stride_maxpool1 = [1,2]
    kernel_size_conv2 = [2,3]
    out_channels_conv2 = [32,64]
    fc1_neurons = [16,32]
    dropout_fc1 = [0.2,0.3]
    fc2_neurons = [16,32]
    dropout_fc2 = [0.3,0.4]
    epochs = 500
    kmer = [9,15,21,41] // minimum k-mer length should usually be 9-mer, unless the convolutional layers' kernels and strides are set small enough (1-2)
    training_perc = 70
    validation_perc = 15
    test_perc = 15
    subsetting_seed = 1

    // time, memory, partitions
    hours_training = 2
    GB_training = 7
    partition_fast_short = "${System.env.partition_fast_short}"
    partition_slow_long = "${System.env.partition_slow_long}"
    partition_slowest_unlimited = "${System.env.partition_slowest_unlimited}"
}
